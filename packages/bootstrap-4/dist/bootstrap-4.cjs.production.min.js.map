{"version":3,"file":"bootstrap-4.cjs.production.min.js","sources":["../src/AddButton/AddButton.tsx","../src/IconButton/IconButton.tsx","../src/ArrayFieldTemplate/ArrayFieldTemplate.tsx","../src/Fields/Fields.ts","../src/DescriptionField/DescriptionField.tsx","../src/TitleField/TitleField.tsx","../src/FieldTemplate/FieldTemplate.tsx","../src/ObjectFieldTemplate/ObjectFieldTemplate.tsx","../src/TextWidget/TextWidget.tsx","../src/DateTimeWidget/DateTimeWidget.tsx","../src/RangeWidget/RangeWidget.tsx","../src/SelectWidget/SelectWidget.tsx","../src/Widgets/Widgets.ts","../src/CheckboxWidget/CheckboxWidget.tsx","../src/CheckboxesWidget/CheckboxesWidget.tsx","../src/ColorWidget/ColorWidget.tsx","../src/DateWidget/DateWidget.tsx","../src/EmailWidget/EmailWidget.tsx","../src/PasswordWidget/PasswordWidget.tsx","../src/RadioWidget/RadioWidget.tsx","../src/TextareaWidget/TextareaWidget.tsx","../src/UpDownWidget/UpDownWidget.tsx","../src/URLWidget/URLWidget.tsx","../src/FileWidget/FileWidget.tsx","../src/Theme/Theme.tsx","../src/ErrorList/ErrorList.tsx","../src/Form/Form.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { AddButtonProps } from \"@rjsf/core\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { BsPlus } from \"react-icons/bs\";\r\n\r\nconst AddButton: React.FC<AddButtonProps> = props => (\r\n  <Button {...props} color=\"primary\" style={{width: \"100%\"}} className=\"ml-1\">\r\n    <BsPlus/>\r\n  </Button>\r\n);\r\n\r\nexport default AddButton;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { IoIosRemove } from \"react-icons/io\";\r\nimport { GrAdd } from \"react-icons/gr\";\r\nimport { AiOutlineArrowUp, AiOutlineArrowDown } from \"react-icons/ai\";\r\n\r\nconst mappings: any = {\r\n  remove: <IoIosRemove />,\r\n  plus: <GrAdd />,\r\n  \"arrow-up\": <AiOutlineArrowUp />,\r\n  \"arrow-down\": <AiOutlineArrowDown />,\r\n};\r\n\r\ntype IconButtonProps = {\r\n  icon: string;\r\n  className?: string;\r\n  tabIndex?: number;\r\n  style?: any;\r\n  disabled?: any;\r\n  onClick?: any;\r\n};\r\n\r\nconst IconButton = (props: IconButtonProps) => {\r\n  const { icon, className, ...otherProps } = props;\r\n  return (\r\n    <Button {...otherProps} variant=\"light\" size=\"sm\">\r\n      {mappings[icon]}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default IconButton;\r\n","import React from \"react\";\r\nimport { utils } from \"@rjsf/core\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { ArrayFieldTemplateProps, IdSchema } from \"@rjsf/core\";\r\n\r\nimport AddButton from \"../AddButton/AddButton\";\r\nimport IconButton from \"../IconButton/IconButton\";\r\n\r\nconst { isMultiSelect, getDefaultRegistry } = utils;\r\n\r\nconst ArrayFieldTemplate = (props: ArrayFieldTemplateProps) => {\r\n  const { schema, registry = getDefaultRegistry() } = props;\r\n\r\n  // TODO: update types so we don't have to cast registry as any\r\n  if (isMultiSelect(schema, (registry as any).rootSchema)) {\r\n    return <DefaultFixedArrayFieldTemplate {...props} />;\r\n  } else {\r\n    return <DefaultNormalArrayFieldTemplate {...props} />;\r\n  }\r\n};\r\n\r\ntype ArrayFieldTitleProps = {\r\n  TitleField: any;\r\n  idSchema: IdSchema;\r\n  title: string;\r\n  required: boolean;\r\n};\r\n\r\nconst ArrayFieldTitle = ({\r\n  TitleField,\r\n  idSchema,\r\n  title,\r\n  required,\r\n}: ArrayFieldTitleProps) => {\r\n  if (!title) {\r\n    return null;\r\n  }\r\n\r\n  const id = `${idSchema.$id}__title`;\r\n  return <TitleField id={id} title={title} required={required} />;\r\n};\r\n\r\ntype ArrayFieldDescriptionProps = {\r\n  DescriptionField: any;\r\n  idSchema: IdSchema;\r\n  description: string;\r\n};\r\n\r\nconst ArrayFieldDescription = ({\r\n  DescriptionField,\r\n  idSchema,\r\n  description,\r\n}: ArrayFieldDescriptionProps) => {\r\n  if (!description) {\r\n    return null;\r\n  }\r\n\r\n  const id = `${idSchema.$id}__description`;\r\n  return <DescriptionField id={id} description={description} />;\r\n};\r\n\r\n// Used in the two templates\r\nconst DefaultArrayItem = (props: any) => {\r\n  const btnStyle = {\r\n    flex: 1,\r\n    paddingLeft: 6,\r\n    paddingRight: 6,\r\n    fontWeight: \"bold\",\r\n  };\r\n  return (\r\n    <div key={props.key}>\r\n      <Row className=\"mb-2  d-flex align-items-center\">\r\n        <Col xs=\"9\" lg=\"9\">{props.children}</Col>\r\n\r\n        <Col xs=\"3\" lg=\"3\" className=\"py-4\">\r\n          {props.hasToolbar && (\r\n            <div className=\"d-flex flex-row\">\r\n              {(props.hasMoveUp || props.hasMoveDown) && (\r\n                <div className=\"m-0 p-0\">\r\n                  <IconButton\r\n                    icon=\"arrow-up\"\r\n                    className=\"array-item-move-up\"\r\n                    tabIndex={-1}\r\n                    style={btnStyle as any}\r\n                    disabled={\r\n                      props.disabled || props.readonly || !props.hasMoveUp\r\n                    }\r\n                    onClick={props.onReorderClick(props.index, props.index - 1)}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {(props.hasMoveUp || props.hasMoveDown) && (\r\n                <div className=\"m-0 p-0\">\r\n                  <IconButton\r\n                    icon=\"arrow-down\"\r\n                    tabIndex={-1}\r\n                    style={btnStyle as any}\r\n                    disabled={\r\n                      props.disabled || props.readonly || !props.hasMoveDown\r\n                    }\r\n                    onClick={props.onReorderClick(props.index, props.index + 1)}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {props.hasRemove && (\r\n                <div className=\"m-0 p-0\">\r\n                  <IconButton\r\n                    icon=\"remove\"\r\n                    tabIndex={-1}\r\n                    style={btnStyle as any}\r\n                    disabled={props.disabled || props.readonly}\r\n                    onClick={props.onDropIndexClick(props.index)}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DefaultFixedArrayFieldTemplate = (props: ArrayFieldTemplateProps) => {\r\n  return (\r\n    <fieldset className={props.className}>\r\n      <ArrayFieldTitle\r\n        key={`array-field-title-${props.idSchema.$id}`}\r\n        TitleField={props.TitleField}\r\n        idSchema={props.idSchema}\r\n        title={props.uiSchema[\"ui:title\"] || props.title}\r\n        required={props.required}\r\n      />\r\n\r\n      {(props.uiSchema[\"ui:description\"] || props.schema.description) && (\r\n        <div\r\n          className=\"field-description\"\r\n          key={`field-description-${props.idSchema.$id}`}>\r\n          {props.uiSchema[\"ui:description\"] || props.schema.description}\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        className=\"row array-item-list\"\r\n        key={`array-item-list-${props.idSchema.$id}`}>\r\n        {props.items && props.items.map(DefaultArrayItem)}\r\n      </div>\r\n\r\n      {props.canAdd && (\r\n        <AddButton\r\n          className=\"array-item-add\"\r\n          onClick={props.onAddClick}\r\n          disabled={props.disabled || props.readonly}\r\n        />\r\n      )}\r\n    </fieldset>\r\n  );\r\n};\r\n\r\nconst DefaultNormalArrayFieldTemplate = (props: ArrayFieldTemplateProps) => {\r\n  return (\r\n    <div>\r\n      <Row className=\"p-0 m-0\">\r\n        <Col className=\"p-0 m-0\">\r\n        <ArrayFieldTitle\r\n          key={`array-field-title-${props.idSchema.$id}`}\r\n          TitleField={props.TitleField}\r\n          idSchema={props.idSchema}\r\n          title={props.uiSchema[\"ui:title\"] || props.title}\r\n          required={props.required}\r\n        />\r\n\r\n        {(props.uiSchema[\"ui:description\"] || props.schema.description) && (\r\n          <ArrayFieldDescription\r\n            key={`array-field-description-${props.idSchema.$id}`}\r\n            DescriptionField={props.DescriptionField}\r\n            idSchema={props.idSchema}\r\n            description={\r\n              props.uiSchema[\"ui:description\"] || props.schema.description\r\n            }\r\n          />\r\n        )}\r\n\r\n        <Container fluid key={`array-item-list-${props.idSchema.$id}`} className=\"p-0 m-0\">\r\n          {props.items && props.items.map(p => DefaultArrayItem(p))}\r\n\r\n          {props.canAdd && (\r\n            <Container className=\"\">\r\n              <Row className=\"mt-2\">\r\n                <Col xs={9}></Col>\r\n                <Col xs={3} className=\"py-4 col-lg-3 col-3\"> <AddButton\r\n                  className=\"array-item-add\"\r\n                  onClick={props.onAddClick}\r\n                  disabled={props.disabled || props.readonly}\r\n                /></Col>\r\n\r\n              </Row>\r\n            </Container>\r\n          )}\r\n        </Container></Col>\r\n\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArrayFieldTemplate;\r\n","import DescriptionField from '../DescriptionField/DescriptionField';\r\nimport TitleField from '../TitleField/TitleField';\r\n\r\nexport default {\r\n  DescriptionField,\r\n  TitleField,\r\n};\r\n","import React from \"react\";\r\nimport { FieldProps } from \"@rjsf/core\";\r\n\r\nexport interface DescriptionFieldProps extends Partial<FieldProps> {\r\n  description?: string;\r\n}\r\n\r\nconst DescriptionField = ({ description }: Partial<FieldProps>) => {\r\n  if (description) {\r\n    return <div><div className=\"mb-3\">{description}</div></div>;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default DescriptionField;\r\n","import React from \"react\";\r\nimport { FieldProps } from \"@rjsf/core\";\r\n\r\nexport interface TitleFieldProps extends Partial<FieldProps> {\r\n  title: string;\r\n}\r\n\r\nconst TitleField = ({ title }: Partial<FieldProps>) => (\r\n  <>\r\n    <div className=\"my-1\">\r\n      <h5>{title}</h5>\r\n      <hr className=\"border-0 bg-secondary\" style={{ height: \"1px\" }} />\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default TitleField;\r\n","import React from \"react\";\r\n\r\nimport { FieldTemplateProps } from \"@rjsf/core\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nconst FieldTemplate = ({\r\n  id,\r\n  children,\r\n  displayLabel,\r\n  rawErrors = [],\r\n  rawHelp,\r\n  rawDescription,\r\n}: FieldTemplateProps) => {\r\n  return (\r\n    <Form.Group>\r\n      {children}\r\n      {displayLabel && rawDescription ? (\r\n        <Form.Text className={rawErrors.length > 0 ? \"text-danger\" : \"text-muted\"}>\r\n          {rawDescription}\r\n        </Form.Text>\r\n      ) : null}\r\n      {rawErrors.length > 0 && (\r\n        <ListGroup as=\"ul\">\r\n          {rawErrors.map((error: string) => {\r\n            return (\r\n              <ListGroup.Item as=\"li\" key={error} className=\"border-0 m-0 p-0\">\r\n                <small className=\"m-0 text-danger\">\r\n                  {error}\r\n                </small>\r\n              </ListGroup.Item>\r\n            );\r\n          })}\r\n        </ListGroup>\r\n      )}\r\n      {rawHelp && (\r\n        <Form.Text\r\n          className={rawErrors.length > 0 ? \"text-danger\" : \"text-muted\"}\r\n          id={id}>\r\n          {rawHelp}\r\n        </Form.Text>\r\n      )}\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default FieldTemplate;\r\n","import React from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport { ObjectFieldTemplateProps } from \"@rjsf/core\";\r\n\r\nconst ObjectFieldTemplate = ({\r\n  DescriptionField,\r\n  description,\r\n  TitleField,\r\n  title,\r\n  properties,\r\n  required,\r\n  uiSchema,\r\n  idSchema,\r\n}: ObjectFieldTemplateProps) => {\r\n  return (\r\n    <>\r\n      {(uiSchema[\"ui:title\"] || title) && (\r\n        <TitleField\r\n          id={`${idSchema.$id}-title`}\r\n          title={title}\r\n          required={required}\r\n        />\r\n      )}\r\n      {description && (\r\n        <DescriptionField\r\n          id={`${idSchema.$id}-description`}\r\n          description={description}\r\n        />\r\n      )}\r\n      <Container fluid className=\"p-0\">\r\n        {properties.map((element: any, index: number) => (\r\n          <Row key={index} style={{ marginBottom: \"10px\" }}>\r\n            <Col xs={12}> {element.content}</Col>\r\n          </Row>\r\n        ))}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObjectFieldTemplate;\r\n","import React from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { WidgetProps } from \"@rjsf/core\";\r\n\r\nexport interface TextWidgetProps extends WidgetProps {\r\n  type?: string;\r\n}\r\n\r\nconst TextWidget = ({\r\n  id,\r\n  required,\r\n  readonly,\r\n  disabled,\r\n  type,\r\n  label,\r\n  value,\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n  autofocus,\r\n  options,\r\n  schema,\r\n  rawErrors = [],\r\n\r\n}: TextWidgetProps) => {\r\n  const _onChange = ({\r\n    target: { value },\r\n  }: React.ChangeEvent<HTMLInputElement>) =>\r\n    onChange(value === \"\" ? options.emptyValue : value);\r\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\r\n    onBlur(id, value);\r\n  const _onFocus = ({\r\n    target: { value },\r\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\r\n\r\n  // const classNames = [rawErrors.length > 0 ? \"is-invalid\" : \"\", type === 'file' ? 'custom-file-label': \"\"]\r\n  return (\r\n    <Form.Group className=\"mb-0\">\r\n      <Form.Label className={rawErrors.length > 0 ? \"text-danger\" : \"\"}>\r\n        {label || schema.title}\r\n        {(label || schema.title) && required ? \"*\" : null}\r\n      </Form.Label>\r\n      <Form.Control\r\n        id={id}\r\n        autoFocus={autofocus}\r\n        required={required}\r\n        disabled={disabled}\r\n        readOnly={readonly}\r\n        className={rawErrors.length > 0 ? \"is-invalid\" : \"\"}\r\n        list={schema.examples ? `examples_${id}` : undefined}\r\n        type={type || (schema.type as string)}\r\n        value={value || value === 0 ? value : \"\"}\r\n        onChange={_onChange}\r\n        onBlur={_onBlur}\r\n        onFocus={_onFocus}\r\n\r\n      />\r\n      {schema.examples ? (\r\n        <datalist id={`examples_${id}`}>\r\n          {(schema.examples as string[])\r\n            .concat(schema.default ? ([schema.default] as string[]) : [])\r\n            .map((example: any) => {\r\n              return <option key={example} value={example} />;\r\n            })}\r\n        </datalist>\r\n      ) : null}\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default TextWidget;\r\n","import React from \"react\";\r\nimport { utils } from \"@rjsf/core\";\r\nimport TextWidget, { TextWidgetProps } from \"../TextWidget\";\r\n\r\nconst { localToUTC, utcToLocal } = utils;\r\n\r\nconst DateTimeWidget = (props: TextWidgetProps) => {\r\n  const value = utcToLocal(props.value);\r\n  const onChange = (value: any) => {\r\n    props.onChange(localToUTC(value));\r\n  };\r\n\r\n  return (\r\n    <TextWidget  \r\n      {...props}\r\n      type=\"datetime-local\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DateTimeWidget;\r\n","import React from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { utils } from \"@rjsf/core\";\r\nimport { WidgetProps } from \"@rjsf/core\";\r\n\r\nconst { rangeSpec } = utils;\r\n\r\nconst RangeWidget = ({\r\n  value,\r\n  readonly,\r\n  disabled,\r\n  onBlur,\r\n  onFocus,\r\n  options,\r\n  schema,\r\n  onChange,\r\n  required,\r\n  label,\r\n  id,\r\n}: WidgetProps) => {\r\n  let sliderProps = { value, label, id, ...rangeSpec(schema) };\r\n\r\n  const _onChange = ({\r\n    target: { value },\r\n  }: React.ChangeEvent<HTMLInputElement>) =>\r\n    onChange(value === \"\" ? options.emptyValue : value);\r\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\r\n    onBlur(id, value);\r\n  const _onFocus = ({\r\n    target: { value },\r\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\r\n\r\n  return (\r\n    <Form.Group className=\"mb-0\">\r\n      <Form.Label>\r\n        {label}\r\n        {label && required ? \"*\" : null}\r\n      </Form.Label>\r\n      <Form.Control\r\n        type=\"range\"\r\n        required={required}\r\n        disabled={disabled}\r\n        readOnly={readonly}\r\n        onChange={_onChange}\r\n        onBlur={_onBlur}\r\n        onFocus={_onFocus}\r\n        {...sliderProps}\r\n      />\r\n      <span className=\"range-view\">{value}</span>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default RangeWidget;\r\n","import React from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { WidgetProps } from \"@rjsf/core\";\r\nimport { utils } from \"@rjsf/core\";\r\n\r\nconst { asNumber, guessType } = utils;\r\n\r\nconst nums = new Set([\"number\", \"integer\"]);\r\n\r\n/**\r\n * This is a silly limitation in the DOM where option change event values are\r\n * always retrieved as strings.\r\n */\r\nconst processValue = (schema: any, value: any) => {\r\n  // \"enum\" is a reserved word, so only \"type\" and \"items\" can be destructured\r\n  const { type, items } = schema;\r\n  if (value === \"\") {\r\n    return undefined;\r\n  } else if (type === \"array\" && items && nums.has(items.type)) {\r\n    return value.map(asNumber);\r\n  } else if (type === \"boolean\") {\r\n    return value === \"true\";\r\n  } else if (type === \"number\") {\r\n    return asNumber(value);\r\n  }\r\n\r\n  // If type is undefined, but an enum is present, try and infer the type from\r\n  // the enum values\r\n  if (schema.enum) {\r\n    if (schema.enum.every((x: any) => guessType(x) === \"number\")) {\r\n      return asNumber(value);\r\n    } else if (schema.enum.every((x: any) => guessType(x) === \"boolean\")) {\r\n      return value === \"true\";\r\n    }\r\n  }\r\n\r\n  return value;\r\n};\r\n\r\nconst SelectWidget = ({\r\n  schema,\r\n  id,\r\n  options,\r\n  label,\r\n  required,\r\n  disabled,\r\n  readonly,\r\n  value,\r\n  multiple,\r\n  autofocus,\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n  placeholder,\r\n  rawErrors = [],\r\n}: WidgetProps) => {\r\n  const { enumOptions, enumDisabled } = options;\r\n\r\n  const emptyValue = multiple ? [] : \"\";\r\n\r\n  function getValue(\r\n    event: React.FocusEvent | React.ChangeEvent | any,\r\n    multiple: Boolean\r\n  ) {\r\n    if (multiple) {\r\n      return [].slice\r\n        .call(event.target.options as any)\r\n        .filter((o: any) => o.selected)\r\n        .map((o: any) => o.value);\r\n    } else {\r\n      return event.target.value;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label className={rawErrors.length > 0 ? \"text-danger\" : \"\"}>\r\n        {label || schema.title}\r\n        {(label || schema.title) && required ? \"*\" : null}\r\n      </Form.Label>\r\n      <Form.Control\r\n        as=\"select\"\r\n        custom\r\n        id={id}\r\n        value={typeof value === \"undefined\" ? emptyValue : value}\r\n        required={required}\r\n        multiple={multiple}\r\n        disabled={disabled}\r\n        readOnly={readonly}\r\n        autoFocus={autofocus}\r\n        className={rawErrors.length > 0 ? \"is-invalid\" : \"\"}\r\n        onBlur={\r\n          onBlur &&\r\n          ((event: React.FocusEvent) => {\r\n            const newValue = getValue(event, multiple);\r\n            onBlur(id, processValue(schema, newValue));\r\n          })\r\n        }\r\n        onFocus={\r\n          onFocus &&\r\n          ((event: React.FocusEvent) => {\r\n            const newValue = getValue(event, multiple);\r\n            onFocus(id, processValue(schema, newValue));\r\n          })\r\n        }\r\n        onChange={(event: React.ChangeEvent) => {\r\n          const newValue = getValue(event, multiple);\r\n          onChange(processValue(schema, newValue));\r\n        }}>\r\n        {!multiple && schema.default === undefined && (\r\n          <option value=\"\">{placeholder}</option>\r\n        )}\r\n        {(enumOptions as any).map(({ value, label }: any, i: number) => {\r\n          const disabled: any =\r\n            Array.isArray(enumDisabled) &&\r\n            (enumDisabled as any).indexOf(value) != -1;\r\n          return (\r\n            <option key={i} id={label} value={value} disabled={disabled}>\r\n              {label}\r\n            </option>\r\n          );\r\n        })}\r\n      </Form.Control>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default SelectWidget;\r\n","import CheckboxWidget from \"../CheckboxWidget/CheckboxWidget\";\r\nimport CheckboxesWidget from \"../CheckboxesWidget/CheckboxesWidget\";\r\nimport ColorWidget from \"../ColorWidget/ColorWidget\";\r\nimport DateWidget from \"../DateWidget/DateWidget\";\r\nimport DateTimeWidget from \"../DateTimeWidget/DateTimeWidget\";\r\nimport EmailWidget from \"../EmailWidget/EmailWidget\";\r\nimport PasswordWidget from \"../PasswordWidget/PasswordWidget\";\r\nimport RadioWidget from \"../RadioWidget/RadioWidget\";\r\nimport RangeWidget from \"../RangeWidget/RangeWidget\";\r\nimport SelectWidget from \"../SelectWidget/SelectWidget\";\r\nimport TextareaWidget from \"../TextareaWidget/TextareaWidget\";\r\nimport TextWidget from \"../TextWidget/TextWidget\";\r\nimport UpDownWidget from \"../UpDownWidget/UpDownWidget\";\r\nimport URLWidget from \"../URLWidget/URLWidget\";\r\nimport FileWidget from \"../FileWidget/FileWidget\";\r\n\r\nexport default {\r\n  CheckboxWidget,\r\n  CheckboxesWidget,\r\n  ColorWidget,\r\n  DateWidget,\r\n  DateTimeWidget,\r\n  EmailWidget,\r\n  PasswordWidget,\r\n  RadioWidget,\r\n  RangeWidget,\r\n  SelectWidget,\r\n  TextareaWidget,\r\n  TextWidget,\r\n  UpDownWidget,\r\n  URLWidget,\r\n  FileWidget\r\n};\r\n","import React from \"react\";\r\n\r\nimport { WidgetProps } from \"@rjsf/core\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nconst CheckboxWidget = (props: WidgetProps) => {\r\n  const {\r\n    id,\r\n    value,\r\n    required,\r\n    disabled,\r\n    readonly,\r\n    label,\r\n    schema,\r\n    autofocus,\r\n    onChange,\r\n    onBlur,\r\n    onFocus,\r\n  } = props;\r\n\r\n  const _onChange = ({\r\n    target: { checked },\r\n  }: React.FocusEvent<HTMLInputElement>) => onChange(checked);\r\n  const _onBlur = ({\r\n    target: { checked },\r\n  }: React.FocusEvent<HTMLInputElement>) => onBlur(id, checked);\r\n  const _onFocus = ({\r\n    target: { checked },\r\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, checked);\r\n\r\n  const desc = label || schema.description;\r\n  return (\r\n    <Form.Group  className={`checkbox ${disabled || readonly ? \"disabled\" : \"\"}`}>\r\n        <Form.Check\r\n          id={id}\r\n          label={desc}\r\n          checked={typeof value === \"undefined\" ? false : value}\r\n          required={required}\r\n          disabled={disabled}\r\n          readOnly={readonly}\r\n          autoFocus={autofocus}\r\n          onChange={_onChange}\r\n          type=\"checkbox\"\r\n          onBlur={_onBlur}\r\n          onFocus={_onFocus}\r\n        />\r\n        </Form.Group>\r\n  );\r\n};\r\n\r\nexport default CheckboxWidget;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { WidgetProps } from \"@rjsf/core\";\r\n\r\nconst selectValue = (value: any, selected: any, all: any) => {\r\n  const at = all.indexOf(value);\r\n  const updated = selected.slice(0, at).concat(value, selected.slice(at));\r\n\r\n  // As inserting values at predefined index positions doesn't work with empty\r\n  // arrays, we need to reorder the updated selection to match the initial order\r\n  return updated.sort((a: any, b: any) => all.indexOf(a) > all.indexOf(b));\r\n};\r\n\r\nconst deselectValue = (value: any, selected: any) => {\r\n  return selected.filter((v: any) => v !== value);\r\n};\r\n\r\nconst CheckboxesWidget = ({\r\n  schema,\r\n  label,\r\n  id,\r\n  disabled,\r\n  options,\r\n  value,\r\n  autofocus,\r\n  readonly,\r\n  required,\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n}: WidgetProps) => {\r\n  const { enumOptions, enumDisabled, inline } = options;\r\n\r\n  const _onChange = (option: any) => ({\r\n    target: { checked },\r\n  }: React.ChangeEvent<HTMLInputElement>) => {\r\n    const all = (enumOptions as any).map(({ value }: any) => value);\r\n\r\n    if (checked) {\r\n      onChange(selectValue(option.value, value, all));\r\n    } else {\r\n      onChange(deselectValue(option.value, value));\r\n    }\r\n  };\r\n\r\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\r\n    onBlur(id, value);\r\n  const _onFocus = ({\r\n    target: { value },\r\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\r\n\r\n  return (\r\n    <>\r\n      <Form.Label htmlFor={id}>{label || schema.title}</Form.Label>\r\n      <Form.Group>\r\n        {(enumOptions as any).map((option: any, index: number) => {\r\n          const checked = value.indexOf(option.value) !== -1;\r\n          const itemDisabled =\r\n            enumDisabled && (enumDisabled as any).indexOf(option.value) != -1;\r\n\r\n          return inline ? (\r\n            <Form key={index}>\r\n              <Form.Check\r\n                required={required}\r\n                inline\r\n                className=\"bg-transparent border-0\"\r\n                custom\r\n                checked={checked}\r\n                type={\"checkbox\"}\r\n                id={`${id}_${index}`}\r\n                label={option.label}\r\n                autoFocus={autofocus && index === 0}\r\n                onChange={_onChange(option)}\r\n                onBlur={_onBlur}\r\n                onFocus={_onFocus}\r\n                disabled={disabled || itemDisabled || false}\r\n                readOnly={readonly}\r\n              />\r\n            </Form>\r\n          ) : (\r\n            <Form key={index}>\r\n              <Form.Check\r\n                custom\r\n                required={required}\r\n                checked={checked}\r\n                className=\"bg-transparent border-0\"\r\n                type={\"checkbox\"}\r\n                id={`${id}_${index}`}\r\n                label={option.label}\r\n                autoFocus={autofocus && index === 0}\r\n                onChange={_onChange(option)}\r\n                onBlur={_onBlur}\r\n                onFocus={_onFocus}\r\n                disabled={disabled || itemDisabled || false}\r\n                readOnly={readonly}\r\n              />\r\n            </Form>\r\n          );\r\n        })}\r\n      </Form.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckboxesWidget;\r\n","import React from \"react\";\r\nimport TextWidget, { TextWidgetProps } from \"../TextWidget\";\r\n\r\nconst ColorWidget = (props: TextWidgetProps) => {\r\n  return <TextWidget {...props} type=\"color\" />;\r\n};\r\n\r\nexport default ColorWidget;\r\n","import React from \"react\";\r\nimport TextWidget, { TextWidgetProps } from \"../TextWidget\";\r\n\r\nconst DateWidget = (props: TextWidgetProps) => {\r\n  return (\r\n    <TextWidget\r\n      {...props}   \r\n      type=\"date\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default DateWidget;","import React from \"react\";\r\nimport TextWidget, { TextWidgetProps } from \"../TextWidget\";\r\n\r\nconst EmailWidget = (props: TextWidgetProps) => {\r\n  return <TextWidget {...props} type=\"email\" />;\r\n};\r\n\r\nexport default EmailWidget;\r\n","import React from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { WidgetProps } from \"@rjsf/core\";\r\n\r\nconst PasswordWidget = ({\r\n  id,\r\n  required,\r\n  readonly,\r\n  disabled,\r\n  value,\r\n  label,\r\n  onFocus,\r\n  onBlur,\r\n  onChange,\r\n  options,\r\n  autofocus,\r\n  schema,\r\n  rawErrors = [],\r\n}: WidgetProps) => {\r\n  const _onChange = ({\r\n    target: { value },\r\n  }: React.ChangeEvent<HTMLInputElement>) =>\r\n    onChange(value === \"\" ? options.emptyValue : value);\r\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\r\n    onBlur(id, value);\r\n  const _onFocus = ({\r\n    target: { value },\r\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\r\n\r\n  return (\r\n    <Form.Group  className=\"mb-0\">\r\n      <Form.Label className={rawErrors.length > 0 ? \"text-danger\" : \"\"}>\r\n        {label || schema.title}\r\n        {(label || schema.title) && required ? \"*\" : null}\r\n      </Form.Label>\r\n      <Form.Control\r\n        id={id}\r\n        autoFocus={autofocus}\r\n        className={rawErrors.length > 0 ? \"is-invalid\" : \"\"}\r\n        required={required}\r\n        disabled={disabled}\r\n        readOnly={readonly}\r\n        type=\"password\"\r\n        value={value ? value : \"\"}\r\n        onFocus={_onFocus}\r\n        onBlur={_onBlur}\r\n        onChange={_onChange}\r\n      />\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default PasswordWidget;\r\n","import React from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { WidgetProps } from \"@rjsf/core\";\r\n\r\nconst RadioWidget = ({\r\n  id,\r\n  schema,\r\n  options,\r\n  value,\r\n  required,\r\n  disabled,\r\n  readonly,\r\n  label,\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n}: WidgetProps) => {\r\n  const { enumOptions, enumDisabled } = options;\r\n\r\n  const _onChange = ({\r\n    target: { value },\r\n  }: React.ChangeEvent<HTMLInputElement>) =>\r\n    onChange(schema.type == \"boolean\" ? value !== \"false\" : value);\r\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\r\n    onBlur(id, value);\r\n  const _onFocus = ({\r\n    target: { value },\r\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\r\n\r\n  const inline = Boolean(options && options.inline);\r\n\r\n  return (\r\n    <Form.Group className=\"mb-0\">\r\n      <Form.Label className=\"d-block\">\r\n        {label || schema.title}\r\n        {(label || schema.title) && required ? \"*\" : null}\r\n      </Form.Label>\r\n      {(enumOptions as any).map((option: any, i: number) => {\r\n        const itemDisabled =\r\n          Array.isArray(enumDisabled) &&\r\n          enumDisabled.indexOf(option.value) !== -1;\r\n        const checked = option.value == value;\r\n\r\n        const radio = (\r\n          <Form.Check\r\n            inline={inline}\r\n            label={option.label}\r\n            id={option.label}\r\n            key={i}\r\n            name={id}\r\n            type=\"radio\"\r\n            disabled={disabled || itemDisabled || readonly}\r\n            checked={checked}\r\n            required={required}\r\n            value={option.value}\r\n            onChange={_onChange}\r\n            onBlur={_onBlur}\r\n            onFocus={_onFocus}\r\n          />\r\n        );\r\n        return radio;\r\n      })}\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default RadioWidget;\r\n","import React from \"react\";\r\n\r\nimport { WidgetProps } from \"@rjsf/core\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\n\r\ntype CustomWidgetProps = WidgetProps & {\r\n  options: any;\r\n};\r\n\r\nconst TextareaWidget = ({\r\n  id,\r\n  placeholder,\r\n  value,\r\n  required,\r\n  disabled,\r\n  autofocus,\r\n  label,\r\n  readonly,\r\n  onBlur,\r\n  onFocus,\r\n  onChange,\r\n  options,\r\n  schema,\r\n  rawErrors = [],\r\n}: CustomWidgetProps) => {\r\n  const _onChange = ({\r\n    target: { value },\r\n  }: React.ChangeEvent<HTMLTextAreaElement>) =>\r\n    onChange(value === \"\" ? options.emptyValue : value);\r\n  const _onBlur = ({\r\n    target: { value },\r\n  }: React.FocusEvent<HTMLTextAreaElement>) => onBlur(id, value);\r\n  const _onFocus = ({\r\n    target: { value },\r\n  }: React.FocusEvent<HTMLTextAreaElement>) => onFocus(id, value);\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={id}>\r\n        {label || schema.title}\r\n        {required && (\r\n          <span\r\n            aria-hidden\r\n            className={rawErrors.length > 0 ? \"text-danger ml-1\" : \"ml-1\"}>\r\n            &thinsp;{\"*\"}\r\n          </span>\r\n        )}\r\n      </label>\r\n      <InputGroup>\r\n        <FormControl\r\n          id={id}\r\n          as=\"textarea\"\r\n          placeholder={placeholder}\r\n          disabled={disabled}\r\n          readOnly={readonly}\r\n          value={value}\r\n          required={required}\r\n          autoFocus={autofocus}\r\n          rows={options.rows || 5}\r\n          onChange={_onChange}\r\n          onBlur={_onBlur}\r\n          onFocus={_onFocus}\r\n        />\r\n      </InputGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextareaWidget;\r\n","import React from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { WidgetProps } from \"@rjsf/core\";\r\n\r\nconst UpDownWidget = ({\r\n  id,\r\n  required,\r\n  readonly,\r\n  disabled,\r\n  label,\r\n  value,\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n  autofocus,\r\n}: WidgetProps) => {\r\n  const _onChange = ({\r\n    target: { value },\r\n  }: React.ChangeEvent<HTMLInputElement>) => onChange(value);\r\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\r\n    onBlur(id, value);\r\n  const _onFocus = ({\r\n    target: { value },\r\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\r\n\r\n  return (\r\n    <Form.Group  className=\"mb-0\">\r\n      <Form.Label>\r\n        {label}\r\n        {label && required ? \"*\" : null}\r\n      </Form.Label>\r\n      <Form.Control\r\n        id={id}\r\n        autoFocus={autofocus}\r\n        required={required}\r\n        type=\"number\"\r\n        disabled={disabled}\r\n        readOnly={readonly}\r\n        value={value ? value : \"\"}\r\n        onChange={_onChange}\r\n        onBlur={_onBlur}\r\n        onFocus={_onFocus}\r\n      />\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default UpDownWidget;\r\n","import React from \"react\";\r\nimport TextWidget, { TextWidgetProps } from \"../TextWidget\";\r\n\r\nconst URLWidget = (props: TextWidgetProps) => {\r\n  return <TextWidget {...props} type=\"url\" />;\r\n};\r\n\r\nexport default URLWidget;\r\n","import React from \"react\";\r\nimport TextWidget, { TextWidgetProps } from \"../TextWidget\";\r\n\r\nconst FileWidget = (props: TextWidgetProps) => {\r\n  return <TextWidget {...props} type=\"file\"/>;\r\n};\r\n\r\nexport default FileWidget;\r\n","import React from \"react\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport ArrayFieldTemplate from \"../ArrayFieldTemplate\";\r\nimport ErrorList from \"../ErrorList\";\r\nimport Fields from \"../Fields\";\r\nimport FieldTemplate from \"../FieldTemplate\";\r\nimport ObjectFieldTemplate from \"../ObjectFieldTemplate\";\r\nimport Widgets from \"../Widgets\";\r\n\r\nimport { ThemeProps } from \"@rjsf/core\";\r\nimport { utils } from \"@rjsf/core\";\r\nconst { getDefaultRegistry } = utils;\r\n\r\nconst { fields, widgets } = getDefaultRegistry();\r\n\r\nconst DefaultChildren = () => (\r\n  <div>\r\n    <Button variant=\"primary\" type=\"submit\">\r\n      Submit\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nconst Theme: ThemeProps = {\r\n  children: <DefaultChildren />,\r\n  ArrayFieldTemplate,\r\n  fields: { ...fields, ...Fields },\r\n  FieldTemplate,\r\n  ObjectFieldTemplate,\r\n  widgets: { ...widgets, ...Widgets },\r\n  ErrorList,\r\n};\r\n\r\nexport default Theme;\r\n","import React from \"react\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nimport { ErrorListProps } from \"@rjsf/core\";\r\n\r\nconst ErrorList = ({ errors }: ErrorListProps) => (\r\n  <Card border=\"danger\" className=\"mb-4\">\r\n    <Card.Header className=\"alert-danger\">Errors</Card.Header>\r\n    <Card.Body className=\"p-0\">\r\n      <ListGroup >\r\n        {errors.map((error, i: number) => {\r\n          return (\r\n            <ListGroup.Item key={i} className=\"border-0\">\r\n              <span>{error.stack}</span>\r\n            </ListGroup.Item>\r\n          );\r\n        })}\r\n      </ListGroup>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nexport default ErrorList;\r\n","import { withTheme, FormProps } from \"@rjsf/core\";\r\n\r\nimport Theme from \"../Theme\";\r\nimport { StatelessComponent } from \"react\";\r\n\r\nconst Form:\r\n  | React.ComponentClass<FormProps<any>>\r\n  | StatelessComponent<FormProps<any>> = withTheme(Theme);\r\n\r\nexport default Form;\r\n"],"names":["AddButton","props","React","Button","color","style","width","className","BsPlus","mappings","remove","IoIosRemove","plus","GrAdd","AiOutlineArrowUp","AiOutlineArrowDown","IconButton","icon","otherProps","variant","size","isMultiSelect","utils","getDefaultRegistry","ArrayFieldTitle","title","TitleField","id","idSchema","$id","required","ArrayFieldDescription","description","DescriptionField","DefaultArrayItem","btnStyle","flex","paddingLeft","paddingRight","fontWeight","key","Row","Col","xs","lg","children","hasToolbar","hasMoveUp","hasMoveDown","tabIndex","disabled","readonly","onClick","onReorderClick","index","hasRemove","onDropIndexClick","DefaultFixedArrayFieldTemplate","uiSchema","schema","items","map","canAdd","onAddClick","DefaultNormalArrayFieldTemplate","Container","fluid","p","height","FieldTemplate","rawErrors","rawHelp","rawDescription","Form","Group","displayLabel","Text","length","ListGroup","as","error","Item","ObjectFieldTemplate","properties","element","marginBottom","content","TextWidget","type","label","value","onChange","onBlur","onFocus","autofocus","options","Label","Control","autoFocus","readOnly","list","examples","undefined","target","emptyValue","concat","example","localToUTC","utcToLocal","rangeSpec","asNumber","guessType","nums","Set","processValue","has","every","x","CheckboxWidget","Check","checked","CheckboxesWidget","enumOptions","enumDisabled","inline","_onChange","option","all","selected","at","indexOf","slice","sort","a","b","selectValue","filter","v","deselectValue","_onBlur","_onFocus","htmlFor","itemDisabled","custom","ColorWidget","DateWidget","DateTimeWidget","EmailWidget","PasswordWidget","RadioWidget","Boolean","i","Array","isArray","name","RangeWidget","sliderProps","SelectWidget","multiple","placeholder","getValue","event","call","o","newValue","TextareaWidget","InputGroup","FormControl","rows","UpDownWidget","URLWidget","FileWidget","fields","widgets","DefaultChildren","Theme","ArrayFieldTemplate","registry","rootSchema","Fields","Widgets","ErrorList","errors","Card","border","Header","Body","stack","withTheme"],"mappings":"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"}